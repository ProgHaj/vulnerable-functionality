name: CI script

on: [push]

jobs:
  create_release:
    name: Conditionally creates release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - if: startsWith(github.event.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}

  java-common:
    name: Test and conditional release
    runs-on: ubuntu-latest
    needs: create_release
    defaults:
      run:
        working-directory: java/common

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      - name: Conditionally prepare release
        if: startsWith(github.event.ref, 'refs/tags/')
        run: tar -czf release.tar.gz target/*.jar target/dependency
      - name: Conditionally upload to release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: java/common/release.tar.gz
          asset_name: java-common.tar.gz
          asset_content_type: application/gzip

  java-maven:
    name: Conditional release
    runs-on: ubuntu-latest
    needs: create_release
    if: startsWith(github.event.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2
      - name: Conditionally upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: java/maven/mavenWrapper.sh
          asset_name: java-mavenWrapper.sh
          asset_content_type: text/plain
